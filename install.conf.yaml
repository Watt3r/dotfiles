- clean: ['~']


- shell:
  -
    description: sudo prompt
    command: |
      if [ -z "$GITHUB_ACTIONS" ]; then
        sudo -v
      fi
  -
    description: brew install
    # Mac
    command: |
      if [ "$(uname -s)" = "Darwin" ]; then
        # Install brew if doesnt exist
        if ! command -v brew &> /dev/null; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        fi
        brew update
        brew tap homebrew/bundle
        brew bundle --file osx/Brewfile
        ./osx/preferences.sh

        echo "mas signin no longer works. To install all mas first login to the app store then run \`brew bundle osx/MasBrewfile\`"
      fi
    stdout: true
    stderr: true
  -
    description: apt-get install
    # Linux
    command: |
      if [ "$(uname -s)" = "Linux" ]; then
        sudo apt-get update 
        sudo apt-get install -y zsh build-essential ripgrep bat universal-ctags unzip

        # Install 1password
        if ! command -v op &> /dev/null; then
          ARCH="$(dpkg --print-architecture)" && \
          wget "https://cache.agilebits.com/dist/1P/op2/pkg/v2.20.0/op_linux_${ARCH}_v2.20.0.zip" -O op.zip && \
          unzip -d op op.zip && \
          sudo mv op/op /usr/local/bin && \
          rm -r op.zip op && \
          sudo groupadd -f onepassword-cli && \
          sudo chgrp onepassword-cli /usr/local/bin/op && \
          sudo chmod g+s /usr/local/bin/op
        fi

        # Install node v20
        NODE_MAJOR=20
        if ! command -v node &>/dev/null || [ "$NODE_MAJOR" -ne "$(node --version | cut -d'v' -f2 | cut -d'.' -f1)" ]; then
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
          echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
          sudo apt-get update
          sudo apt-get install -y nodejs
        fi

        # Set zsh as default shell
        sudo chsh -s $(which zsh) ${USER}
      fi
    stdout: true
    stderr: true
  -
    description: oh-my-zsh 
    command: |
      # Check if oh-my-zsh is installed
      OMZDIR="$HOME/.oh-my-zsh"
      if [ ! -d "$OMZDIR" ]; then
        echo 'Installing oh-my-zsh'
        /bin/sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      fi
    stdout: true
    stderr: true
  -
    description: (ask to) save secrets
    stdout: true
    stdin: true
    stderr: true
    command: |
      # Check if running in an interactive session
      if [ -t 0 ]; then
        echo "interactive"
        # In interactive session, ask user for input
        if [ -n "$ZSH_VERSION" ]; then
          # Zsh
          read "use_1pass?Do you want to use 1Password (yes/no)? "
        elif [ -n "$BASH_VERSION" ]; then
          # Bash
          read -p "Do you want to use 1Password (yes/no)? " use_1pass
        fi
      else
        # In non-interactive session, don't try to login
        echo "Non-interactive session detected. Cannot prompt for input."
        use_1pass="no"
      fi

      use_1pass=$(echo $use_1pass | tr '[:upper:]' '[:lower:]')
      if [ "$use_1pass" = "yes" ]; then
        echo "Configuring 1Password account..."
        op_status=$(op signin 2>&1)

        if echo "$op_status" | grep -q "not currently signed in"; then
          echo "You are not signed into 1Password, adding account..."
          op account add
        else
          echo "Already signed in to 1Password."
        fi
  
        /bin/bash -c "$(op inject -i ./secrets/1pass.sh)"
      else
        echo "Skipping 1Password configuration."
      fi

- create:
  - ~/.oh-my-zsh/custom/plugins/
  - ~/.npm-global

- link:
    ~/.gitconfig: git/gitconfig
    ~/.git-templates: git/git-templates
    ~/.gitignore_global: git/gitignore
    ~/.ssh/config:
        path: ssh/config
        create: true
    ~/.vim/pack: 
        path: vim/pack
        create: true
    ~/.vimrc: vim/vimrc
    ~/.tmux.conf: tmux/tmux.conf
    ~/.tmux/plugins/tpm:
        path: tmux/plugins/tpm
        create: true
    ~/.zprofile: zsh/zprofile
    ~/.zshaliases: zsh/zshaliases
    ~/.zshrc: 
        path: zsh/zshrc
        force: true
    ~/.oh-my-zsh/custom/plugins/:
        glob: true
        path: zsh/oh-my-zsh/custom/plugins/*
    ~/sounds: sounds
    ~/.eslintrc.json: lint/eslintrc.json
    ~/.solhint.json: lint/solhint.json
    ~/.config/ghostty/config:
        path: ghostty/config
        create: true

- shell:
  -
    description: npm config and install
    command: |
      npm config set prefix '~/.npm-global'
      npm install -g nodemon eslint pyright
    stdout: true
    stderr: true
